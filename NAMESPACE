# Generated by roxygen2: do not edit by hand

S3method(as.data.frame,resample)
S3method(as.integer,resample)
S3method(balanced_bootstrap,data.frame)
S3method(balanced_bootstrap,grouped_df)
S3method(bootstrap,data.frame)
S3method(bootstrap,grouped_df)
S3method(c,resample)
S3method(crossv_df,data.frame)
S3method(crossv_df,grouped_df)
S3method(crossv_kfold,data.frame)
S3method(crossv_kfold,grouped_df)
S3method(crossv_lpo,data.frame)
S3method(crossv_lpo,grouped_df)
S3method(crossv_ts,data.frame)
S3method(crossv_ts,grouped_df)
S3method(crossv_tskfold,data.frame)
S3method(crossv_tskfold,grouped_df)
S3method(dim,resample)
S3method(holdout_frac,data.frame)
S3method(holdout_frac,grouped_df)
S3method(holdout_n,data.frame)
S3method(holdout_n,grouped_df)
S3method(jackknife,data.frame)
S3method(jackknife,grouped_df)
S3method(obj_sum,resample)
S3method(permute,data.frame)
S3method(permute,grouped_df)
S3method(print,resample)
S3method(resample_df,data.frame)
S3method(resample_df,grouped_df)
S3method(roll,data.frame)
S3method(roll,grouped_df)
S3method(tsbootstrap,data.frame)
S3method(tsbootstrap,grouped_df)
export(balanced_bootstrap)
export(bootstrap)
export(crossv_df)
export(crossv_kfold)
export(crossv_loo)
export(crossv_lpo)
export(crossv_ts)
export(crossv_tskfold)
export(holdout_frac)
export(holdout_n)
export(is_resample)
export(jackknife)
export(permute)
export(resample)
export(resample_df)
export(resample_lst)
export(roll)
export(tsbootstrap)
importFrom(assertthat,assert_that)
importFrom(assertthat,is.flag)
importFrom(assertthat,is.number)
importFrom(assertthat,is.string)
importFrom(assertthat,on_failure)
importFrom(dplyr,group_by_)
importFrom(dplyr,group_size)
importFrom(dplyr,mutate_)
importFrom(dplyr,n_groups)
importFrom(dplyr,summarise_)
importFrom(pryr,inspect)
importFrom(purrr,"%||%")
importFrom(purrr,compact)
importFrom(purrr,flatten_int)
importFrom(purrr,is_integer)
importFrom(purrr,map)
importFrom(purrr,map2_df)
importFrom(purrr,map_df)
importFrom(purrr,map_lgl)
importFrom(purrr,pmap_df)
importFrom(purrr,reduce)
importFrom(purrr,transpose)
importFrom(tibble,as_tibble)
importFrom(tibble,obj_sum)
importFrom(tibble,tibble)
