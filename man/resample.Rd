% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resample.R
\name{resample}
\alias{resample}
\alias{as.integer.resample}
\alias{collect.resample}
\alias{length.resample}
\title{A "lazy" resample object}
\usage{
resample(data, idx, ...)

\method{as.integer}{resample}(x, ...)

\method{collect}{resample}(x, ...)

\method{length}{resample}(x, ...)
}
\arguments{
\item{data}{An object. This can be any object for which a \code{[} method is defined.}

\item{idx}{A vector of integer indexes. For efficiency, this function does not check whether these indices are valid.}

\item{...}{Other arguments}
}
\description{
Often you will resample a dataset many times, as in cross-validation or bootstrapping.
Copying and storing the complete resample each time is both time-consuming and memory intensive.
However, all that is needed for the resample
The \code{resample}
instead stores a "pointer" to the original dataset, and a vector of row
indexes.
}
\section{Methods (by class)}{
\itemize{
\item \code{resample}: Return the indexes as an integer vector.

\item \code{resample}: Subset the data and return the results.
The return value  should have same type as \code{x$data}.

\item \code{resample}: The length of the indexes.
}}

\examples{
r <- resample(mtcars, 1:10)
as.integer(r)
as.data.frame(r)
dim(r)
# check that the data part of r is identical to orig data
identical(r, mtcars)
}
