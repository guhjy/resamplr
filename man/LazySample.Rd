% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lazy_sample.R
\name{LazySample}
\alias{LazySample}
\title{A lazy sample object}
\description{
Often you will resample a dataset many times, as in cross-validation or bootstrapping.
Copying and storing each complete sample is costly in both memory and time.
This object instead stores the original data as a \code{\link[rlang]{quosure}} and indexes, and only computes the sample object when needed.
}
\section{Usage}{

\preformatted{smpl <- LazySample$new(data, idx, fun = NULL)

smpl$idx
smpl$data
smpl$sample
smpl$extractor

print(smpl)

}
}

\section{Arguments}{

\describe{
\item{data}{An unevaluated expression that will be captured as a quosure.}
\item{idx}{A character or integer vector. If not these, it will be coerced to an integer (numeric) or character vector (all other classes). Since \code{data} is not evaluated when the object is created, the validity of these indexes is not checked.}
\item{extractor}{A function with two arguments (data, index) which is used to extract the sample when it is computed. This is coerced to a function via \code{\link[rlang]{as_function}}, a formula like \code{~ .x[.y]} is acceptable.If \code{NULL}, then the \code{extract_sample} method is used.
}
}
}

\section{Details}{


\code{$sample}{Returns the sample. This is not calculated until needed, so it is lazy}

\code{print(smpl)} or \code{smpl$print()} shows some information about the \code{LazySample} object on the screen.
}

\examples{
# New lazy sample object
smpl <- LazySample$new(mtcars, 1:5)
# Get the indexes
smpl$idx
# Get the expression containing the data
smpl$quo
# Get the sample - it is not computed until called
smpl$sample
# Get the original data
smpl$data
}
