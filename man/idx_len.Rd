% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/idx_len.R
\name{idx_len}
\alias{idx_len}
\alias{idx_len.default}
\alias{idx_len.array}
\alias{idx_len.matrix}
\alias{idx_len.data.frame}
\alias{idx_len.quosure}
\title{Generate the number of elements to sample from}
\usage{
idx_len(x, ...)

\method{idx_len}{default}(x, margin = 1L, ...)

\method{idx_len}{array}(x, margin = 1L, ...)

\method{idx_len}{matrix}(x, rows = TRUE, ...)

\method{idx_len}{data.frame}(x, rows = TRUE, ...)

\method{idx_len}{quosure}(x, ...)
}
\arguments{
\item{x}{An object}

\item{...}{Arguments passed to other methods}

\item{margin}{Integer scalar; the array margin to use}

\item{rows}{Logical scalar. If \code{TRUE}, use return number of rows, else the number of columns.}
}
\value{
A scalar integer
}
\description{
This method provides number of elements from which to sample.
This number is needed by the resampling functions.
This is better than explicit enumeration of indexes, since resampling does not require the explicit enumeration.
}
\section{Methods (by class)}{
\itemize{
\item \code{default}: The default is to use the \code{length} of the object.

\item \code{array}: For arrays, specify the margin for the number of elements. The default is the first margin.

\item \code{matrix}: For matrices, there are two dimensions, so specify whether the number of rows or columns are to be used.

\item \code{data.frame}: For data frames, there are two dimensions, so specify whether the number of rows or columns are to be used.

\item \code{quosure}: For quosures, the expression is evaluated and then \code{idx_len} is called on the result.
}}

\examples{
require("tibble")
require("rlang")

# Extract number of indexes for various classes

# default (vectors)
idx_len(seq_len(10))

# matrices (rows by default)
idx_len(matrix(seq_len(20), nrow = 2))

# arrays (first dimension by default)
idx_len(array(seq_len(60), dim = c(5, 4, 3)))

# data frames (rows by default)
idx_len(tibble(foo = 1:10, bar = 1:10))

# quosures are evaluated first
x <- tibble(foo = 1:10, bar = 1:10)
q <- quo(x)
q
idx_len(q)
}
